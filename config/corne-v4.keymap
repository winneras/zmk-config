#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        par_l {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <5 4>;
        };

        par_r {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 9>;
        };

        bkt_l {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <19 18>;
        };

        bkt_r {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <23 22>;
        };

        brc_l {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <33 32>;
        };

        brc_r {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <36 37>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <12 13>;
        };

        to_mac {
            bindings = <&to 0>;
            key-positions = <42 43 44>;
        };

        to_win {
            bindings = <&to 1>;
            key-positions = <45 46 47>;
        };
    };

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "homewrow_mods_left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 9 8 10 11 23 22 35 34 33 21 20 19 18 30 31 32 41 40 39>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty-hrm-mac {
            bindings = <
&mt LEFT_ALT ESC      &kp Q            &kp W            &kp E         &kp R              &kp T        &none          &none          &kp Y        &kp U               &kp I                 &kp O             &kp P                &kp BACKSPACE
&mt LEFT_CONTROL TAB  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LCTRL D  &hml LEFT_SHIFT F  &kp G        &none          &none          &kp H        &hmr RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_ALT L  &hmr RGUI SEMICOLON  &kp APOS
&kp LSHFT             &kp Z            &kp X            &kp C         &kp V              &kp B        &kp GRAVE      &kp BACKSLASH  &kp N        &kp M               &kp COMMA             &kp DOT           &kp FSLH             &kp RIGHT_SHIFT
                                                                      &kp LCMD           &lt 2 SPACE  &lt 3 ENTER    &lt 3 ENTER    &lt 4 SPACE  &kp RIGHT_CONTROL
            >;

            label = "mac";
        };

        qwerty-hrm-win {
            bindings = <
&trans  &kp Q            &kp W            &kp E                &kp R              &kp T   &none     &none   &kp Y   &kp U               &kp I                 &kp O             &kp P                &trans
&trans  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F  &kp G   &none     &none   &kp H   &hmr RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMI  &trans
&trans  &kp Z            &kp X            &kp C                &kp V              &kp B   &trans    &trans  &kp N   &kp M               &kp COMMA             &kp DOT           &kp SLASH            &trans
                                                               &kp LEFT_CONTROL   &trans  &trans    &trans  &trans  &kp RIGHT_GUI
            >;

            label = "win";
        };

        symbol {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT  &none     &none   &kp CARET  &kp AMPERSAND  &kp ASTERISK   &kp MINUS       &kp PLUS   &trans
&trans  &trans           &kp LEFT     &kp UP    &kp RIGHT   &trans       &none     &trans  &trans     &kp HOME       &kp PAGE_UP    &kp END         &trans     &trans
&trans  &trans           &trans       &kp DOWN  &trans      &trans       &trans    &trans  &trans     &trans         &kp PAGE_DOWN  &kp UNDERSCORE  &kp EQUAL  &trans
                                                &trans      &trans       &trans    &trans  &trans     &trans
            >;

            label = "symbol";
        };

        number {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N6       &kp N7        &kp N8           &kp N9         &kp N0   &none     &none   &trans  &trans    &trans        &trans     &trans  &trans
&trans  &kp N1       &kp N2        &kp N3           &kp N4         &kp N5   &none     &none   &trans  &kp LEFT  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&none   &kp KP_PLUS  &kp KP_MINUS  &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp DOT  &trans    &trans  &trans  &trans    &kp DOWN      &trans     &trans  &trans
                                                    &trans         &trans   &trans    &trans  &trans  &trans
            >;

            label = "number";
        };

        func {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6   &none    &none  &kp K_MUTE      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &none    &none  &none           &kp LSHFT          &kp LCTRL        &kp LALT              &kp LGUI              &none
&none   &none   &none   &none    &none    &none    &none    &none  &kp C_PREVIOUS  &kp C_PLAY_PAUSE   &kp C_NEXT       &none                 &none                 &none
                                 &none    &none    &none    &none  &trans          &none
            >;

            label = "func";
        };

        switch {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none          &none           &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &none          &none           &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &bootloader    &studio_unlock  &trans  &trans  &trans  &trans  &trans  &trans
                                                      &trans        &trans        &trans         &trans          &trans  &trans
            >;

            label = "switch";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        switch {
            if-layers = <4 3>;
            then-layer = <5>;
        };
    };
};
