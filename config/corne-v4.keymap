#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        par_l {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <5 4>;
        };

        par_r {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 9>;
        };

        bkt_l {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <32 33>;
        };

        bkt_r {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <37 36>;
        };

        brc_l {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <18 19>;
        };

        brc_r {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <22 23>;
        };

        left_del {
            bindings = <&kp DELETE>;
            key-positions = <1 2>;
        };

        to_game {
            bindings = <&to 1>;
            key-positions = <44 34 19>;
        };
    };

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "homewrow_mods_left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 9 8 10 11 23 22 35 34 33 21 20 19 18 30 31 32 41 40 39>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty-hrm-mac {
            bindings = <
&kp ESC          &kp Q                &kp W            &kp E            &kp R              &kp T        &none          &none          &kp Y        &kp U               &kp I             &kp O             &kp P                         &kp BACKSPACE
&kp TAB          &hml LEFT_CONTROL A  &hml LEFT_ALT S  &hml LEFT_GUI D  &hml LEFT_SHIFT F  &kp G        &none          &none          &kp H        &hmr RIGHT_SHIFT J  &hmr RIGHT_GUI K  &hmr RIGHT_ALT L  &hmr RIGHT_CONTROL SEMICOLON  &kp SQT
&mt LSHFT GRAVE  &kp Z                &kp X            &kp C            &kp V              &kp B        &kp GRAVE      &kp BACKSLASH  &kp N        &kp M               &kp COMMA         &kp DOT           &kp FSLH                      &mt RIGHT_SHIFT BACKSLASH
                                                                        &kp LCMD           &lt 2 SPACE  &lt 3 ENTER    &lt 4 ENTER    &lt 2 SPACE  &lt 5 BACKSPACE
            >;

            label = "mac";
        };

        qwerty-game {
            bindings = <
&kp ESC         &kp Q  &kp W  &kp E  &kp R             &kp T   &trans    &trans  &kp Y   &kp U         &kp I      &kp O    &kp P     &kp BSPC
&trans          &kp A  &kp S  &kp D  &kp F             &kp G   &trans    &trans  &kp H   &kp J         &kp K      &kp L    &kp SEMI  &kp APOS
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C  &kp V             &kp B   &kp M     &trans  &kp N   &kp M         &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                     &kp LEFT_CONTROL  &trans  &trans    &trans  &trans  &kp LEFT_GUI
            >;

            label = "game";
        };

        number {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1       &kp N2        &kp N3           &kp NUMBER_4   &kp N5   &none     &none   &kp N6  &kp N7    &kp N8        &kp N9     &kp N0  &trans
&trans  &kp N6       &kp N7        &kp N8           &kp N9         &kp N0   &none     &none   &trans  &kp LEFT  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &kp KP_PLUS  &kp KP_MINUS  &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp DOT  &trans    &trans  &trans  &trans    &kp DOWN      &trans     &trans  &trans
                                                    &trans         &trans   &trans    &trans  &trans  &trans
            >;

            label = "number";
        };

        symbol {
            bindings = <
&trans  &mt LEFT_ALT EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &none     &none   &kp CARET      &kp AMPERSAND   &kp ASTERISK    &kp MINUS          &kp PLUS          &trans
&trans  &mt LEFT_CONTROL TAB      &kp LEFT     &kp UP    &kp RIGHT   &kp PAGE_UP    &none     &trans  &kp GRAVE      &kp LEFT_SHIFT  &kp LEFT_GUI    &kp LEFT_ALT       &kp LEFT_CONTROL  &trans
&trans  &mt LEFT_SHIFT ESCAPE     &kp END      &kp DOWN  &kp HOME    &kp PAGE_DOWN  &trans    &trans  &kp BACKSLASH  &kp EQUAL       &kp UNDERSCORE  &kp DOUBLE_QUOTES  &kp SQT           &trans
                                                         &trans      &trans         &trans    &trans  &trans         &trans
            >;

            label = "symbol";
        };

        func {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6   &none    &none  &kp K_MUTE      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &none    &none  &none           &kp LSHFT          &kp LEFT_GUI     &kp LALT              &kp LEFT_CONTROL      &none
&none   &none   &none   &none    &none    &none    &none    &none  &kp C_PREVIOUS  &kp C_PLAY_PAUSE   &kp C_NEXT       &none                 &none                 &none
                                 &none    &none    &none    &none  &trans          &none
            >;

            label = "func";
        };

        mouse {
            bindings = <
&trans  &trans  &trans          &trans          &trans           &trans  &trans    &trans  &trans  &trans          &msc SCRL_UP    &trans           &trans  &trans
&trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_RIGHT  &trans  &trans    &trans  &trans  &mkp LCLK       &mkp MCLK       &mkp RCLK        &trans  &trans
&trans  &trans  &trans          &mmv MOVE_DOWN  &trans           &trans  &trans    &trans  &trans  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &trans  &trans
                                                &trans           &trans  &trans    &trans  &trans  &trans
            >;

            label = "mouse";
        };

        switch {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none          &none           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &none          &none           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR    &trans        &trans        &trans        &trans        &bootloader    &studio_unlock  &trans  &trans  &trans  &trans  &trans  &trans
                                                  &trans        &trans        &trans         &trans          &trans  &trans
            >;

            label = "switch";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        switch {
            if-layers = <4 2>;
            then-layer = <6>;
        };
    };
};
